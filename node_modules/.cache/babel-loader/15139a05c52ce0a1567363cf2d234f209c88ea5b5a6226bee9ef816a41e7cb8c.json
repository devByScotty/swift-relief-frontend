{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thapelo\\\\Documents\\\\30 days projects\\\\swift-relief\\\\client\\\\src\\\\components\\\\Admin\\\\Analytics.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { BsFillArchiveFill, BsFillGrid3X3GapFill, BsPeopleFill, BsFillBellFill } from 'react-icons/bs';\nimport './Analytics.css';\nimport { Bar, Line } from '@ant-design/charts';\nimport { useParams } from \"react-router-dom\";\nimport { deleteCar, getAllCars } from \"../../redux/Actions/carsActions\";\nimport { getAllBookings } from \"../../redux/Actions/bookingActions\";\nimport { getAllUsers } from \"../../redux/Actions/userActions\";\nimport { carsReducer } from \"../../redux/Reducers/carsReducer\";\nimport { bookingsReducer } from \"../../redux/Reducers/bookingReducer\";\nimport { usersReducer } from \"../../redux/Reducers/usersReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n//bookingsReducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  /*\r\n  const { carid } = useParams();\r\n  const { cars } = useSelector((state) => state.carsReducer);\r\n  const { bookings } = useSelector((state) => state.bookingsReducer);\r\n  const { users } = useSelector((state) => state.usersReducer);\r\n  const { loading } = useSelector((state) => state.alertsReducer);\r\n    const dispatch = useDispatch();\r\n  const [totalCars, setTotalcars] = useState([]);\r\n  const [totalSales, setTotalSales] = useState(0);\r\n    useEffect(() => {\r\n      // Fetch data\r\n          dispatch(getAllBookings());\r\n      dispatch(getAllCars());\r\n      dispatch(getAllUsers());\r\n          // Calculate total sales\r\n  \r\n        const sales = 0;\r\n      const barData = [];\r\n        let totalSalesData = 0;\r\n        for (let i = 0; i < bookings.length; i++) {\r\n          const sales = bookings[i]?.totalAmount || 0; // Using optional chaining to handle possible undefined values\r\n          console.log(`Sales for booking ${i + 1}: ${sales}`);\r\n          totalSalesData += sales;\r\n          barData[i] = sales;\r\n          console.log(barData[i]);\r\n         \r\n        }\r\n        console.log(totalSalesData)\r\n        setTotalSales(totalSalesData)\r\n    }, [dispatch]);\r\n      // Sample data for pie chart\r\n  \r\n     \r\n    const barChartData = [\r\n      { type: 'Total Sales', value: totalSales },\r\n  ];\r\n    // Set up the Bar chart\r\n  const barConfig = {\r\n      data: barChartData,\r\n      xField: 'type',\r\n      yField: 'value',\r\n      legend: false,\r\n      label: {\r\n          position: 'top',\r\n          style: {\r\n              fill: '#aaa',\r\n          },\r\n      },\r\n  };\r\n    // Prepare data for the Line chart\r\n  const lineChartData = Array.from({ length: 12 }, (_, index) => {\r\n      // Get the name of the month\r\n      const month = new Date(2023, index, 1).toLocaleString('default', { month: 'long' });\r\n        // Find the booking for this month\r\n      const matchingBooking = bookings.find((booking) => {\r\n          const bookingMonth = new Date(booking.createdAt).getMonth();\r\n          return bookingMonth === index;\r\n      });\r\n        // Return an object with month and totalAmount\r\n      return {\r\n          month,\r\n          totalAmount: matchingBooking ? matchingBooking.totalAmount : 0,\r\n      };\r\n  });*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"TOTAL SALES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BsFillArchiveFill, {\n              className: \"card_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"R \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"TOTAL FLEET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BsFillGrid3X3GapFill, {\n              className: \"card_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"CUSTOMERS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BsPeopleFill, {\n              className: \"card_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","BsFillArchiveFill","BsFillGrid3X3GapFill","BsPeopleFill","BsFillBellFill","Bar","Line","useParams","deleteCar","getAllCars","getAllBookings","getAllUsers","carsReducer","bookingsReducer","usersReducer","useSelector","useDispatch","jsxDEV","_jsxDEV","Analytics","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thapelo/Documents/30 days projects/swift-relief/client/src/components/Admin/Analytics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BsFillArchiveFill, BsFillGrid3X3GapFill, BsPeopleFill, BsFillBellFill } from 'react-icons/bs'\r\nimport './Analytics.css';\r\nimport { Bar, Line } from '@ant-design/charts';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { deleteCar, getAllCars } from \"../../redux/Actions/carsActions\";\r\nimport { getAllBookings } from \"../../redux/Actions/bookingActions\";\r\nimport { getAllUsers } from \"../../redux/Actions/userActions\";\r\nimport { carsReducer } from \"../../redux/Reducers/carsReducer\";\r\nimport { bookingsReducer } from \"../../redux/Reducers/bookingReducer\";\r\nimport { usersReducer } from \"../../redux/Reducers/usersReducer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//bookingsReducer\r\n\r\nconst Analytics = () => {\r\n\r\n\r\n    /*\r\n    const { carid } = useParams();\r\n    const { cars } = useSelector((state) => state.carsReducer);\r\n    const { bookings } = useSelector((state) => state.bookingsReducer);\r\n    const { users } = useSelector((state) => state.usersReducer);\r\n    const { loading } = useSelector((state) => state.alertsReducer);\r\n\r\n    const dispatch = useDispatch();\r\n    const [totalCars, setTotalcars] = useState([]);\r\n    const [totalSales, setTotalSales] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Fetch data\r\n\r\n\r\n        dispatch(getAllBookings());\r\n        dispatch(getAllCars());\r\n        dispatch(getAllUsers());\r\n\r\n\r\n        // Calculate total sales\r\n\r\n\r\n\r\n\r\n        const sales = 0;\r\n        const barData = [];\r\n\r\n        let totalSalesData = 0;\r\n\r\n        for (let i = 0; i < bookings.length; i++) {\r\n            const sales = bookings[i]?.totalAmount || 0; // Using optional chaining to handle possible undefined values\r\n            console.log(`Sales for booking ${i + 1}: ${sales}`);\r\n            totalSalesData += sales;\r\n            barData[i] = sales;\r\n            console.log(barData[i]);\r\n           \r\n\r\n        }\r\n\r\n        console.log(totalSalesData)\r\n\r\n        setTotalSales(totalSalesData)\r\n\r\n    }, [dispatch]);\r\n\r\n\r\n    // Sample data for pie chart\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n    const barChartData = [\r\n        { type: 'Total Sales', value: totalSales },\r\n    ];\r\n\r\n    // Set up the Bar chart\r\n    const barConfig = {\r\n        data: barChartData,\r\n        xField: 'type',\r\n        yField: 'value',\r\n        legend: false,\r\n        label: {\r\n            position: 'top',\r\n            style: {\r\n                fill: '#aaa',\r\n            },\r\n        },\r\n    };\r\n\r\n    // Prepare data for the Line chart\r\n    const lineChartData = Array.from({ length: 12 }, (_, index) => {\r\n        // Get the name of the month\r\n        const month = new Date(2023, index, 1).toLocaleString('default', { month: 'long' });\r\n\r\n        // Find the booking for this month\r\n        const matchingBooking = bookings.find((booking) => {\r\n            const bookingMonth = new Date(booking.createdAt).getMonth();\r\n            return bookingMonth === index;\r\n        });\r\n\r\n        // Return an object with month and totalAmount\r\n        return {\r\n            month,\r\n            totalAmount: matchingBooking ? matchingBooking.totalAmount : 0,\r\n        };\r\n    });*/\r\n\r\n    return (\r\n        <div>\r\n            <main className='main-container'>\r\n\r\n\r\n                <div className='main-cards'>\r\n                    <div className='card'>\r\n                        <div className='card-inner'>\r\n                            <h3>TOTAL SALES</h3>\r\n                            <BsFillArchiveFill className='card_icon' />\r\n                        </div>\r\n                        <h1>R {/*users.length*/}</h1>\r\n                    </div>\r\n                    <div className='card'>\r\n                        <div className='card-inner'>\r\n                            <h3>TOTAL FLEET</h3>\r\n                            <BsFillGrid3X3GapFill className='card_icon' />\r\n                        </div>\r\n                        <h1>{/*users.length*/}</h1>\r\n                    </div>\r\n                    <div className='card'>\r\n                        <div className='card-inner'>\r\n                            <h3>CUSTOMERS</h3>\r\n                            <BsPeopleFill className='card_icon' />\r\n                        </div>\r\n                        <h1>{/*users.length*/}</h1>\r\n                    </div>\r\n                  \r\n                </div>\r\n\r\n            \r\n\r\n\r\n            </main>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Analytics"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}