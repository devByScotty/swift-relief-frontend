{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { message } from 'antd';\nimport { Button, Dropdown, Space } from 'antd';\n\n// Action Types\nconst LOADING = 'LOADING';\nconst GET_ALL_USERS = 'GET_ALL_USERS';\n\n// Action Creators\nexport const setLoading = isLoading => ({\n  type: LOADING,\n  payload: isLoading\n});\nexport const getAllUsersSuccess = users => ({\n  type: GET_ALL_USERS,\n  payload: users\n});\nexport const userLogin = reqObj => async dispatch => {\n  dispatch(setLoading(true));\n  try {\n    const response = await axios.post('/api/users/login', reqObj);\n    localStorage.setItem('user', JSON.stringify(response.data));\n    message.success('Login success');\n    dispatch(setLoading(false));\n    // Dispatch an action to update state for successful login if needed\n    window.location.href = '/';\n  } catch (error) {\n    console.error('Login error:', error);\n    dispatch(setLoading(false));\n    if (error.response.status === 401) {\n      message.error('Invalid username or password');\n    } else {\n      message.error('Something went wrong');\n    }\n  }\n};\nexport const userRegister = reqObj => async dispatch => {\n  dispatch(setLoading(true));\n  try {\n    const response = await axios.post('/api/users/register', reqObj);\n    message.success('Registration successful');\n    // Dispatch an action to update state for successful registration if needed\n    dispatch(setLoading(false));\n    window.location.href = '/login';\n  } catch (error) {\n    console.error('Registration error:', error);\n    dispatch(setLoading(false));\n    console.log('Error Response:', error.response);\n    // Handle specific errors based on status code or response data\n    if (error.response.status === 400 && error.response.data.error.includes('duplicate key')) {\n      message.error('Username already exists');\n    } else {\n      message.error('Something went wrong');\n    }\n  }\n};\nexport const getAllUsers = () => async dispatch => {\n  dispatch(setLoading(true));\n  try {\n    const response = await axios.get('/api/users/getusers');\n    dispatch(getAllUsersSuccess(response.data));\n    dispatch(setLoading(false));\n    console.log(response);\n  } catch (error) {\n    console.error('Get all users error:', error);\n    dispatch(setLoading(false));\n    message.error('Something went wrong');\n  }\n};","map":{"version":3,"names":["React","axios","message","Button","Dropdown","Space","LOADING","GET_ALL_USERS","setLoading","isLoading","type","payload","getAllUsersSuccess","users","userLogin","reqObj","dispatch","response","post","localStorage","setItem","JSON","stringify","data","success","window","location","href","error","console","status","userRegister","log","includes","getAllUsers","get"],"sources":["C:/Users/Thapelo/Documents/30 days projects/swift-relief/src/redux/Actions/userActions.jsx"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\nimport { Button, Dropdown, Space } from 'antd';\r\n\r\n\r\n// Action Types\r\nconst LOADING = 'LOADING';\r\nconst GET_ALL_USERS = 'GET_ALL_USERS';\r\n\r\n// Action Creators\r\nexport const setLoading = (isLoading) => ({ type: LOADING, payload: isLoading });\r\nexport const getAllUsersSuccess = (users) => ({ type: GET_ALL_USERS, payload: users });\r\n\r\nexport const userLogin = (reqObj) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const response = await axios.post('/api/users/login', reqObj);\r\n    localStorage.setItem('user', JSON.stringify(response.data));\r\n    message.success('Login success');\r\n    dispatch(setLoading(false));\r\n    // Dispatch an action to update state for successful login if needed\r\n    window.location.href = '/';\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    dispatch(setLoading(false));\r\n    if (error.response.status === 401) {\r\n      message.error('Invalid username or password');\r\n    } else {\r\n      message.error('Something went wrong');\r\n    }\r\n  }\r\n};\r\n\r\nexport const userRegister = (reqObj) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const response = await axios.post('/api/users/register', reqObj);\r\n    message.success('Registration successful');\r\n    // Dispatch an action to update state for successful registration if needed\r\n    dispatch(setLoading(false));\r\n\r\n    window.location.href = '/login';\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    dispatch(setLoading(false));\r\n    console.log('Error Response:', error.response);\r\n    // Handle specific errors based on status code or response data\r\n    if (error.response.status === 400 && error.response.data.error.includes('duplicate key')) {\r\n      message.error('Username already exists');\r\n    } else {\r\n      message.error('Something went wrong');\r\n    }\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const response = await axios.get('/api/users/getusers');\r\n    dispatch(getAllUsersSuccess(response.data));\r\n    dispatch(setLoading(false));\r\n    console.log(response)\r\n  } catch (error) {\r\n    console.error('Get all users error:', error);\r\n    dispatch(setLoading(false));\r\n    message.error('Something went wrong');\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}