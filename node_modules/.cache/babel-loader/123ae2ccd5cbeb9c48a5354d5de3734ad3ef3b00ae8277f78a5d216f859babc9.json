{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thapelo\\\\Documents\\\\30 days projects\\\\swift-relief\\\\client\\\\src\\\\components\\\\CarSection\\\\CarSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DefaultLayout from '../DefualtLayout';\nimport { getAllCars } from '../../redux/Actions/carsActions';\nimport { alertsReducer } from '../../redux/Reducers/alertReducer';\nimport { carsReducer } from '../../redux/Reducers/carsReducer';\nimport { Col, Row, Divider, DatePicker, Checkbox } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../Spinner';\nimport './CarSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nfunction CarSection() {\n  _s();\n  const dispatch = useDispatch();\n  console.log('Hello World');\n  // State for the cars data and error message\n  const [carData, setCarData] = useState([]);\n  const carErrorMessage = useSelector(state => state.errorMessage);\n  const cars = useSelector(state => state.carsReducer);\n  const [totalCars, setTotalcars] = useState([]);\n\n  // Fetch all cars on component mount\n  useEffect(() => {\n    dispatch(getAllCars(cars));\n  }, []);\n  useEffect(() => {\n    setTotalcars(cars);\n  }, [cars]);\n  console.log(getAllCars());\n  console.log(cars);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(CarSection, \"2XcMpiIDd6jrjohhiYfuj6/Av04=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CarSection;\nexport default CarSection;\nvar _c;\n$RefreshReg$(_c, \"CarSection\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","DefaultLayout","getAllCars","alertsReducer","carsReducer","Col","Row","Divider","DatePicker","Checkbox","Link","Spinner","jsxDEV","_jsxDEV","RangePicker","CarSection","_s","dispatch","console","log","carData","setCarData","carErrorMessage","state","errorMessage","cars","totalCars","setTotalcars","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thapelo/Documents/30 days projects/swift-relief/client/src/components/CarSection/CarSection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport DefaultLayout from '../DefualtLayout'\r\nimport { getAllCars } from '../../redux/Actions/carsActions'\r\nimport { alertsReducer } from '../../redux/Reducers/alertReducer'\r\nimport { carsReducer } from '../../redux/Reducers/carsReducer'\r\nimport { Col, Row, Divider, DatePicker, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from '../Spinner';\r\nimport './CarSection.css'\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker\r\nfunction CarSection() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    console.log('Hello World');\r\n    // State for the cars data and error message\r\n    const [carData, setCarData] = useState([]);\r\n    const carErrorMessage = useSelector((state) => state.errorMessage);\r\n    const  cars  = useSelector(state => state.carsReducer)\r\n    const [totalCars, setTotalcars] = useState([])\r\n\r\n\r\n    // Fetch all cars on component mount\r\n    useEffect(() => {\r\n        dispatch(getAllCars(cars));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setTotalcars(cars)\r\n\r\n    }, [cars])\r\n\r\n    console.log(getAllCars())\r\n    console.log(cars)\r\n\r\n\r\n\r\n    return (\r\n        <div className='Home'>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarSection\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,MAAM;AAC9D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIzB,MAAM;EAAEC;AAAY,CAAC,GAAGN,UAAU;AAClC,SAASO,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BkB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMyB,eAAe,GAAGvB,WAAW,CAAEwB,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;EAClE,MAAOC,IAAI,GAAI1B,WAAW,CAACwB,KAAK,IAAIA,KAAK,CAACnB,WAAW,CAAC;EACtD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;;EAG9C;EACAC,SAAS,CAAC,MAAM;IACZmB,QAAQ,CAACf,UAAU,CAACuB,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IAEZ6B,YAAY,CAACF,IAAI,CAAC;EAEtB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVP,OAAO,CAACC,GAAG,CAACjB,UAAU,CAAC,CAAC,CAAC;EACzBgB,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;EAIjB,oBACIZ,OAAA;IAAKe,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGhB,CAAC;AAEd;AAAChB,EAAA,CAlCQD,UAAU;EAAA,QAEEf,WAAW,EAKJD,WAAW,EACpBA,WAAW;AAAA;AAAAkC,EAAA,GARrBlB,UAAU;AAoCnB,eAAeA,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}